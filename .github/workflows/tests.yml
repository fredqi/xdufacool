name: Unit Tests

on:
  push:
    paths:
      - 'pyproject.toml'
      - 'xdufacool/**'
      - 'tests/**'

jobs:
  testing:
    runs-on: ubuntu-${{ matrix.os }}
    strategy:
      matrix:
        python: ['3.10', '3.12']
        os: ['22.04', '24.04']

    env:
      LOG_FILE: ubuntu-${{ matrix.os }}-py${{ matrix.python }}.log

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python }}

    - name: Install package
      run: |
        python -m venv venv
        source venv/bin/activate
        pip install --upgrade pip
        pip install .[dev]

    - name: Unit Tests
      run: |
        python3 -m unittest discover -v > ${{ env.LOG_FILE }}
      continue-on-error: true
      
    - name: Upload logs
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.LOG_FILE }}
        path: ${{ env.LOG_FILE }}

  slack:
    runs-on: ubuntu-latest
    name: Notification
    needs: testing

    env:
      REPO_NAME: ${{ github.event.repository.name }}
    
    steps:
    - uses: actions/download-artifact@v4
      with:
        path: logs

    - name: Collect logs
      id: message
      run: |
        MESSAGE=$(find logs -mindepth 1 -maxdepth 1 -type d | sed -e 's|logs/||' -e 's/^/:white_check_mark: /' | sort)
        echo "message<<EOF" >> $GITHUB_OUTPUT
        echo "${MESSAGE}" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Slack Notification
      uses: rtCamp/action-slack-notify@master
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_ICON_EMOJI: ':mailbox:'
        SLACK_CHANNEL: teaching
        SLACK_COLOR: 'success'
        SLACK_USERNAME: GitHub Action Bot
        SLACK_TITLE: "${{ env.REPO_NAME }} Unit Tests"
        SLACK_MESSAGE: "${{ steps.message.outputs.message }}"
        SLACK_FOOTER: 'triggered by ${{ github.sha }}'
        MSG_MINIMAL: true
        
